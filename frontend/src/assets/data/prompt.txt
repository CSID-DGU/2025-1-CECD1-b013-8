다음 자서전 전체를 처음부터 끝까지 사건 단위로 나누고, 각 사건에 대해 시간, 인물, 장소를 추출하여 JSON 형식으로 정리하세요.
각 인물과 장소는 사건이 다르더라도 중복되지 않도록 하나의 객체로 관리해야 합니다.
비슷한 이름이나 별칭(예: 홍길동, 길동이)은 아래 출력 형식에 맞춰 동일 인물로 묶어 주세요. 인물과 장소의 name에는 괄호 별칭이 들어가지 않고 이름만 나오도록 합니다. 또한 이름은 자서전에 언급된 텍스트로만 추출해냅니다. 동일 인물 및 장소는 이름이 다른 경우, 따로 데이터로 추가하지 않고 별칭에 포함시킵니다. 동일 객체의 이름이 같은 경우, 추가하지 않습니다.
사건에 시간이 나와있지 않은 경우, null로 표시해주세요. 시간이 특정되지 않는 사건도 포함되어야 합니다. 모든 id는 건너뛰는 번호 없이 순서대로 부여해주세요.

사건 단위 구분 기준:

1. 행동 변화: 인물의 주요 행동이 바뀌면 새로운 사건으로 간주합니다.
2. 대화 발생: 인물 간 중요한 대화가 발생하면 별도의 사건으로 구분합니다.
3. 장소 변화: 장소가 바뀌면 새로운 사건으로 나눕니다.
4. 인물 추가: 새로운 인물이 등장할 때 사건을 나눕니다.
5. 동일 시간이라도 인물이나 장소가 추가되면 별도 사건으로 간주합니다.

인물, 장소의 특징도 JSON 구조로 추출해주세요. 응답은 설명을 덧붙이지 않고 JSON 데이터만 나오도록 합니다. events에는 description이 포함되지 않습니다.

출력 형식:

{
    "events": [
        {
            "name": "아남산업 부천공장 설비부 대리 시절",
            "time": { "year": 1988, "month": null, "day": null },
            "people": [1, 2],
            "places": [1],
            "page": 2
        }
    ],
    "people": [
        { "id": 1, "name": "홍길동", "alias": ["주인공", "화자", "나"], "description": "자서전 주인공, 남성, 직장인 출신" },
        { "id": 2, "name": "직원들", "alias": ["우리 팀", "동료직원"], "description": "같은 회사 직원 집단" },
        { "id": 3, "name": "채○환", "alias": ["동창"], "description": "아남산업 채용 관련 동창" },
        { "id": 4, "name": "박실장", "alias": [], "description": "입찰 관련 영업 동료" }
    ],
    "places": [
        { "id": 1, "name": "아남산업 부천공장", "alias": ["아남", "부천 아남산업"], "description": "주인공의 주요 직장, 부천 소재" },
        { "id": 2, "name": "부천경찰서", "alias": ["유치장"], "description": "경찰서 및 유치장" },
        { "id": 3, "name": "암만", "alias": ["요르단 암만"], "description": "경유지" },
        { "id": 4, "name": "변전실", "alias": ["변전실 사무실"], "description": "회사 외진 곳, 한직 근무지" }
    ]
}